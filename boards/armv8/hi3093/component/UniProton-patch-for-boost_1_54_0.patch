diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 00000000..1849dcaa
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,3 @@
+add_compile_definitions(BOOST_HAS_PTHREADS)
+add_compile_definitions(BOOST_HAS_SCHED_YIELD)
+add_subdirectory(libs)
\ No newline at end of file
diff --git a/libs/CMakeLists.txt b/libs/CMakeLists.txt
new file mode 100644
index 00000000..ee0ef01f
--- /dev/null
+++ b/libs/CMakeLists.txt
@@ -0,0 +1,6 @@
+file(GLOB SRCS system/src/*.cpp filesystem/src/*.cpp thread/*.cpp thread/src/pthread/once.cpp thread/src/pthread/thread.cpp)
+list(APPEND SRCS atomic/src/lockpool.cpp)
+list(APPEND SRCS thread/src/future.cpp)
+list(APPEND SRCS chrono/src/chrono.cpp)
+
+add_library(boost OBJECT ${SRCS})
\ No newline at end of file
diff --git a/boost/detail/endian.hpp b/boost/detail/endian.hpp
index 3236808d..eccb6988 100644
--- a/boost/detail/endian.hpp
+++ b/boost/detail/endian.hpp
@@ -112,7 +112,7 @@
    || defined(__amd64__) || defined(_M_AMD64) \
    || defined(__x86_64) || defined(__x86_64__) \
    || defined(_M_X64) || defined(__bfin__) \
-   || defined(__ARMEL__) \
+   || defined(__ARMEL__) || defined(__aarch64__) \
    || (defined(_WIN32) && defined(__ARM__) && defined(_MSC_VER)) // ARM Windows CE don't define anything reasonably unique, but there are no big-endian Windows versions 
 
 # define BOOST_LITTLE_ENDIAN
diff --git a/boost/date_time/local_time/custom_time_zone.hpp b/boost/date_time/local_time/custom_time_zone.hpp
index 84c59a3a..aa6704c4 100644
--- a/boost/date_time/local_time/custom_time_zone.hpp
+++ b/boost/date_time/local_time/custom_time_zone.hpp
@@ -64,7 +64,7 @@ namespace local_time {
     //! True if zone uses daylight savings adjustments
     virtual bool has_dst() const
     {
-      return (dst_calc_rules_); //if calc_rule is set the tz has dst
+      return static_cast<bool>(dst_calc_rules_); //if calc_rule is set the tz has dst
     }
     //! Local time that DST starts -- NADT if has_dst is false
     virtual posix_time::ptime dst_local_start_time(gregorian::greg_year y) const
diff --git a/libs/thread/src/pthread/thread.cpp b/libs/thread/src/pthread/thread.cpp
index 96ef117a..ea14a3e8 100644
--- a/libs/thread/src/pthread/thread.cpp
+++ b/libs/thread/src/pthread/thread.cpp
@@ -25,6 +25,7 @@
 #include <sys/sysctl.h>
 #elif defined BOOST_HAS_UNISTD_H
 #include <unistd.h>
+#include <sys/sysinfo.h>
 #endif
 
 #include "./timeconv.inl"
@@ -527,8 +528,7 @@ namespace boost
         size_t size=sizeof(count);
         return sysctlbyname("hw.ncpu",&count,&size,NULL,0)?0:count;
 #elif defined(BOOST_HAS_UNISTD_H) && defined(_SC_NPROCESSORS_ONLN)
-        int const count=sysconf(_SC_NPROCESSORS_ONLN);
-        return (count>0)?count:0;
+        return get_nprocs();
 #elif defined(__GLIBC__)
         return get_nprocs();
 #else
diff --git a/boost/thread/pthread/thread_data.hpp b/boost/thread/pthread/thread_data.hpp
index 6fd19f26..5033c8a5 100644
--- a/boost/thread/pthread/thread_data.hpp
+++ b/boost/thread/pthread/thread_data.hpp
@@ -53,7 +53,6 @@ namespace boost
 #ifdef PTHREAD_STACK_MIN
           if (size<PTHREAD_STACK_MIN) size=PTHREAD_STACK_MIN;
 #endif
-          size = ((size+page_size-1)/page_size)*page_size;
           int res = pthread_attr_setstacksize(&val_, size);
           BOOST_VERIFY(!res && "pthread_attr_setstacksize failed");
         }